version: 2.3.18-branch-{branch}-build-{build}
image: Visual Studio 2015
cache:
    - c:\protobuf-release
    - c:\zlib
environment:
    matrix:
        - nuget_arch: x64
          target_arch: x86_64
          qt_ver: 5.9\msvc2015_64
          protobuf_ver: 3.4.1
          cmake_generator: Visual Studio 14 2015 Win64
          cmake_toolset: v140,host=x64
        - nuget_arch: Win32
          target_arch: x86
          qt_ver: 5.9\msvc2015
          protobuf_ver: 3.4.1
          cmake_generator: Visual Studio 14 2015
          cmake_toolset: v140_xp
install:
    - ps: |
        if (Test-Path c:\protobuf-release) {
            echo "using protobuf from cache"
        } else {
            Invoke-WebRequest "https://github.com/google/protobuf/releases/download/v$env:protobuf_ver/protobuf-cpp-$env:protobuf_ver.zip" -OutFile c:\protobuf-cpp-$env:protobuf_ver.zip
            Expand-Archive -Path c:\protobuf-cpp-$env:protobuf_ver.zip -DestinationPath c:\
            Set-Location -Path C:\protobuf-$env:protobuf_ver\cmake
            cmake . -G "$env:cmake_generator" -T "$env:cmake_toolset" -Dprotobuf_BUILD_TESTS=0 -Dprotobuf_MSVC_STATIC_RUNTIME=0 -DCMAKE_INSTALL_PREFIX=c:/protobuf-release $env:cmake_params
            msbuild INSTALL.vcxproj /p:Configuration=Release
        }
        if (Test-Path c:\zlib) {
            echo "using zlib from cache"
        } else {
           nuget install zlib -OutputDirectory c:\zlib
        }
services:
    - mysql
build_script:
    - ps: |
        New-Item -ItemType directory -Path C:\projects\cockatrice\build
        Set-Location -Path C:\projects\cockatrice\build
        $zlibinc = c:\cygwin\bin\find /cygdrive/c/zlib/ -path '*v140*/zlib.h'
        $zlibinc = c:\cygwin\bin\dirname $zlibinc
        $zlibinc = c:\cygwin\bin\cygpath -m $zlibinc
        $zliblib = c:\cygwin\bin\find /cygdrive/c/zlib/ -path "*v140*/$env:nuget_arch/Release/zlib.lib"
        $zliblib = c:\cygwin\bin\cygpath -m $zliblib
        Write-Output "ZLIBINC  = $zlibinc"
        Write-Output "ZLIBLIB  = $zliblib"
        $protodir = "c:\protobuf-release"
        $protoc = "c:\protobuf-release\bin\protoc.exe"
        $mysqldll = "c:\Program Files\MySQL\MySQL Server 5.7\lib\libmysql.dll"
        cmake .. -G "$env:cmake_generator" -T "$env:cmake_toolset" "-DCMAKE_PREFIX_PATH=c:/Qt/$env:qt_ver;$protodir" "-DWITH_SERVER=1" "-DZLIB_INCLUDE_DIR=$zlibinc" "-DZLIB_LIBRARY=$zliblib" "-DPROTOBUF_PROTOC_EXECUTABLE=$protoc" "-DMYSQLCLIENT_LIBRARIES=$mysqldll"
    - msbuild PACKAGE.vcxproj /p:Configuration=Release
    - ps: |
        $exe = dir -name *.exe
        $new_name = $exe.Replace(".exe", "-${env:target_arch}_qt5.exe")
        Push-AppveyorArtifact $exe -FileName $new_name
        $cmake_name = $exe.Replace(".exe", "-${env:target_arch}_qt5.cmake.txt")
        Push-AppveyorArtifact CMakeCache.txt -FileName $cmake_name
        $json = New-Object PSObject
        (New-Object PSObject | Add-Member -PassThru NoteProperty bin $new_name | Add-Member -PassThru NoteProperty cmake $cmake_name | Add-Member -PassThru NoteProperty commit $env:APPVEYOR_REPO_COMMIT) | ConvertTo-JSON | Out-File -FilePath "latest-$env:target_arch" -Encoding ASCII
        Push-AppveyorArtifact "latest-$env:target_arch"
        $version = $matches['content']
test: off
deploy:
  description: "Dev build of Cockatrice"
  provider: GitHub
  auth_token:
    secure: p+7wPVry2XEa6TBm9XH8IaQZbBmXQ/J2ldbGmcIxUZD3NkkPrSRRlmE7Of1CBBIO
  artifact: /.*\.exe/
  draft: false
  prerelease: true
  force_update: true
  on:
    appveyor_repo_tag: true